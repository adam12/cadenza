#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


# cadenza.rb : generated by racc

class FilterReference < Struct.new(:identifier, :params)
end

module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 176)

  def initialize(*args)
	super(*args)
	@lexer = Cadenza::Lexer.new
  end

  def push_token(token)
	@q.push(token)
	puts "Lexer: Token found #{token[0].to_s}(#{token[1].to_s})" if self.log_lexer
  end
 
  def parse( str )
	@lexer.source = str
	@document_stack = [DocumentNode.new]
    do_parse
    return @document_stack.first
  end

  def next_token
    @lexer.next_token
  end

  def on_error(error_token_id, error_value, value_stack)
	msg = "parse error on #{token_to_str(error_token_id)} #{error_value}\n#{value_stack.inspect}"
	raise ParseError, msg
  end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    12,    12,     2,   107,    12,    60,     2,    12,    12,     2,
     2,    12,    12,   101,     2,     4,    22,    49,    51,     4,
    59,    79,    22,     4,    80,    92,    22,     4,    12,    12,
     2,    43,    12,    82,   108,    36,    49,    51,    38,    81,
    49,    51,    36,     4,    22,    38,    96,    22,    45,    46,
    47,    48,    50,    52,    14,    55,    94,    56,    15,    98,
    14,    16,    86,    17,    15,    13,   111,    16,    99,    17,
    14,    13,    65,    66,    15,    84,    14,    16,    83,    17,
    15,    13,    79,    16,   106,    17,    14,    13,   110,    88,
    15,    89,    64,    16,    63,    17,    62,    13,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    28,    30,    31,    33,    35,    28,    30,
    31,    33,    35,    49,    51,    49,    51,    53,    54,    49,
    51,    53,    54,    49,    51,    49,    51,    49,    51,    53,
    54,    49,    51,    61,    44,    41,   109,    40,    19,   112,
   113 ]

racc_action_check = [
     0,   102,     0,   102,     6,    37,     6,     9,    85,     9,
    85,    95,    96,    95,    96,     0,   102,    57,    57,     6,
    37,    88,     9,    85,    57,    82,    95,    96,   100,    18,
   100,    18,   105,    58,   105,    13,    72,    72,    13,    58,
    29,    29,    17,   100,    18,    17,    87,   105,    29,    29,
    29,    29,    29,    29,     2,    34,    84,    34,     2,    90,
   108,     2,    65,     2,   108,     2,   108,   108,    92,   108,
    43,   108,    43,    43,    43,    62,   101,    43,    60,    43,
   101,    43,    55,   101,   101,   101,   107,   101,   107,    78,
   107,    78,    42,   107,    41,   107,    40,   107,    47,    47,
    47,    47,    47,    83,    83,    83,    83,    83,    99,    99,
    99,    99,    99,    12,    12,    12,    12,    12,    45,    45,
    45,    45,    45,    46,    46,    46,    46,    46,    35,    35,
    35,    35,    35,    48,    48,    48,    48,    48,    49,    49,
    49,    49,    49,    14,    14,    14,    14,    14,    51,    51,
    51,    51,    51,    52,    52,    52,    52,    52,    53,    53,
    53,    53,    53,    54,    54,    54,    54,    54,    98,    98,
    98,    98,    98,    79,    79,    79,    79,    79,    50,    50,
    50,    50,    50,    69,    69,    70,    70,    71,    71,    68,
    68,    73,    73,    74,    74,    67,    67,   103,   103,    32,
    32,    91,    91,    39,    19,    16,   106,    15,     7,   110,
   111 ]

racc_action_pointer = [
   -20,   nil,    31,   nil,   nil,   nil,   -16,   208,   nil,   -13,
   nil,   nil,   107,    29,   137,   201,   199,    36,     9,   204,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
   nil,   nil,   197,   nil,    36,   122,   nil,    -4,   nil,   179,
    68,    70,    68,    47,   nil,   112,   117,    92,   127,   132,
   172,   142,   147,   152,   157,    76,   nil,    13,    15,   nil,
    45,   nil,    69,   nil,   nil,    38,   nil,   191,   185,   179,
   181,   185,    32,   189,   189,   nil,   nil,   nil,    70,   167,
   nil,   nil,    16,    97,    32,   -12,   nil,    22,    15,   nil,
    41,   197,    35,   nil,   nil,    -9,    -8,   nil,   162,   102,
     8,    53,   -19,   193,   nil,    12,   182,    63,    37,   nil,
   185,   186,   nil,   nil ]

racc_action_default = [
    -2,   -49,   -58,   -50,   -44,   -45,   -58,   -58,   -46,    -1,
   -47,   -48,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
   -56,   -57,   -51,   -52,   -53,   -54,   -55,   -10,    -3,   -16,
    -4,    -5,   -13,    -6,   -58,   -58,    -8,   -58,    -9,   -58,
   -58,   -58,   -58,   -58,   114,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -29,   -58,   -58,   -43,
   -58,   -31,   -58,   -37,   -39,   -58,   -33,   -17,   -18,   -19,
   -20,   -14,   -21,   -15,   -22,   -11,   -12,   -27,   -58,   -25,
    -7,   -42,   -58,   -58,   -58,   -58,   -32,   -58,   -58,   -30,
   -26,   -23,   -58,   -40,   -35,   -58,   -58,   -28,   -58,   -58,
   -58,   -58,   -58,   -24,   -41,   -58,   -58,   -58,   -58,   -38,
   -58,   -58,   -34,   -36 ]

racc_goto_table = [
     9,    26,    20,    34,    37,    39,    18,    77,    42,    90,
    26,    20,    71,    21,    73,    25,   100,    24,    87,    23,
    57,    85,    21,    78,    25,    58,    24,     7,    23,   nil,
    67,    68,    69,    70,   nil,    72,   nil,    74,    75,    76,
    97,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    93,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   103,   nil,    95,   nil,    26,    20,   nil,
   104,   nil,   nil,   nil,    26,    20,   102,    26,    20,    21,
   105,    25,   nil,    24,   nil,    23,    21,   nil,    25,    21,
    24,    25,    23,    24,   nil,    23 ]

racc_goto_check = [
     2,    17,    19,     7,     5,     7,     2,     9,     5,     8,
    17,    19,     6,    21,     6,    15,    16,    13,    14,    11,
     4,    18,    21,    10,    15,    20,    13,     1,    11,   nil,
     4,     4,     4,     4,   nil,     4,   nil,     4,     3,     3,
     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,     2,   nil,    17,    19,   nil,
     7,   nil,   nil,   nil,    17,    19,     2,    17,    19,    21,
     2,    15,   nil,    13,   nil,    11,    21,   nil,    15,    21,
    13,    15,    11,    13,   nil,    11 ]

racc_goto_pointer = [
   nil,    27,     0,   -15,   -15,    -9,   -37,    -9,   -70,   -48,
   -32,    10,   nil,     8,   -48,     6,   -78,    -8,   -42,    -7,
   -12,     4 ]

racc_goto_default = [
   nil,   nil,   nil,    27,    29,   nil,    32,   nil,   nil,   nil,
   nil,     5,     6,     8,   nil,    10,   nil,    11,   nil,     1,
   nil,     3 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  0, 37, :_reduce_2,
  1, 39, :_reduce_3,
  1, 39, :_reduce_4,
  1, 39, :_reduce_5,
  1, 39, :_reduce_6,
  3, 39, :_reduce_7,
  1, 41, :_reduce_8,
  1, 41, :_reduce_9,
  1, 42, :_reduce_none,
  3, 42, :_reduce_11,
  3, 42, :_reduce_12,
  1, 40, :_reduce_none,
  3, 40, :_reduce_14,
  3, 40, :_reduce_15,
  1, 43, :_reduce_none,
  3, 43, :_reduce_17,
  3, 43, :_reduce_18,
  3, 43, :_reduce_19,
  3, 43, :_reduce_20,
  3, 43, :_reduce_21,
  3, 43, :_reduce_22,
  1, 44, :_reduce_23,
  3, 44, :_reduce_24,
  1, 45, :_reduce_25,
  2, 45, :_reduce_26,
  1, 46, :_reduce_27,
  3, 46, :_reduce_28,
  3, 47, :_reduce_29,
  5, 47, :_reduce_30,
  4, 48, :_reduce_31,
  5, 49, :_reduce_32,
  0, 50, :_reduce_33,
  10, 49, :_reduce_34,
  0, 52, :_reduce_35,
  11, 51, :_reduce_36,
  0, 54, :_reduce_37,
  9, 53, :_reduce_38,
  4, 55, :_reduce_39,
  3, 56, :_reduce_40,
  5, 56, :_reduce_41,
  5, 57, :_reduce_42,
  4, 57, :_reduce_43,
  1, 38, :_reduce_44,
  1, 38, :_reduce_45,
  1, 38, :_reduce_46,
  1, 38, :_reduce_47,
  1, 38, :_reduce_48,
  1, 38, :_reduce_49,
  1, 38, :_reduce_50,
  2, 38, :_reduce_51,
  2, 38, :_reduce_52,
  2, 38, :_reduce_53,
  2, 38, :_reduce_54,
  2, 38, :_reduce_55,
  2, 38, :_reduce_56,
  2, 38, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 114

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "+" => 4,
  "-" => 5,
  :IDENTIFIER => 6,
  :INTEGER => 7,
  :REAL => 8,
  :STRING => 9,
  "(" => 10,
  ")" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_GEQ => 14,
  :OP_LEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  "|" => 19,
  :VAR_OPEN => 20,
  :VAR_CLOSE => 21,
  :STMT_OPEN => 22,
  :IF => 23,
  :STMT_CLOSE => 24,
  :ENDIF => 25,
  :ELSE => 26,
  :FOR => 27,
  :IN => 28,
  :ENDFOR => 29,
  :BLOCK => 30,
  :ENDBLOCK => 31,
  :EXTENDS => 32,
  :OP_MAP => 33,
  :RENDER => 34,
  :TEXT_BLOCK => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_GEQ",
  "OP_LEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ENDIF",
  "ELSE",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "EXTENDS",
  "OP_MAP",
  "RENDER",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "additive_expression",
  "filename",
  "multiplicative_expression",
  "boolean_expression",
  "param_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_statement",
  "if_block",
  "@1",
  "for_block",
  "@2",
  "block_block",
  "@3",
  "extends_statement",
  "map_param_list",
  "render_statement" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 11)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 15)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 16)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 17)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 19)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 23)
  def _reduce_8(val, _values, result)
     result = VariableNode.new(val[0], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 24)
  def _reduce_9(val, _values, result)
     result = ConstantNode.new(val[0], val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'cadenza.y', 29)
  def _reduce_11(val, _values, result)
     result = ArithmeticNode.new(val[0],val[2],'*',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 30)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0],val[2],'/',val[0]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_14(val, _values, result)
     result = ArithmeticNode.new(val[0],val[2],'+',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 36)
  def _reduce_15(val, _values, result)
     result = ArithmeticNode.new(val[0],val[2],'-',val[0]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'cadenza.y', 41)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'==',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 42)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'!=',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 43)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'>=',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'<=',val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 45)
  def _reduce_21(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'<' ,val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 46)
  def _reduce_22(val, _values, result)
     result = BooleanNode.new(val[0],val[2],'>' ,val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_23(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 51)
  def _reduce_24(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_25(val, _values, result)
     result = FilterReference.new(val[0], [])    
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 56)
  def _reduce_26(val, _values, result)
     result = FilterReference.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_27(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 61)
  def _reduce_28(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 65)
  def _reduce_29(val, _values, result)
     result = InjectNode.new(val[1], [],     val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 66)
  def _reduce_30(val, _values, result)
     result = InjectNode.new(val[1], val[3], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 72)
  def _reduce_31(val, _values, result)
      			@document_stack.push(DocumentNode.new)
  			result = val[2]
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 79)
  def _reduce_32(val, _values, result)
     result = IfNode.new(val[0], @document_stack.pop.children, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 81)
  def _reduce_33(val, _values, result)
     @document_stack.push(DocumentNode.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 84)
  def _reduce_34(val, _values, result)
       	  		else_body, body = @document_stack.pop, @document_stack.pop
   	  		result = IfNode.new(val[0], body.children, else_body.children, val[0])
   	  	
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 91)
  def _reduce_35(val, _values, result)
     @document_stack.push(DocumentNode.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 95)
  def _reduce_36(val, _values, result)
      			iterator = VariableNode.new(val[2], val[2])
  			iterable = VariableNode.new(val[4], val[4])
  			
  			result = ForNode.new(iterator, iterable, val[0])
  			
  			result.children = @document_stack.pop.children
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 106)
  def _reduce_37(val, _values, result)
     @document_stack.push( DocumentNode.new ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 110)
  def _reduce_38(val, _values, result)
      	  		result = BlockNode.new(val[2], val[0])
  	  		result.children = @document_stack.pop.children
  	  	
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 116)
  def _reduce_39(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 122)
  def _reduce_40(val, _values, result)
      			result = Hash.new
  			key = ConstantNode.new(val[0], val[0])
  			value = val[2]
  			result.store(key, value)
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 129)
  def _reduce_41(val, _values, result)
      			key = ConstantNode.new(val[2], val[2])
  			value = val[4]
  			val[0].store(key, value)
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 136)
  def _reduce_42(val, _values, result)
     result = RenderNode.new(val[2], val[3], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 137)
  def _reduce_43(val, _values, result)
     result = RenderNode.new(val[2], Hash.new, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 141)
  def _reduce_44(val, _values, result)
     @document_stack.last.children.push( TextNode.new(val[0], val[0]) ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 142)
  def _reduce_45(val, _values, result)
     @document_stack.last.children.push( val[0] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 143)
  def _reduce_46(val, _values, result)
     @document_stack.last.children.push( val[0] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 144)
  def _reduce_47(val, _values, result)
     @document_stack.last.children.push( val[0] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 147)
  def _reduce_48(val, _values, result)
      			@document_stack.last.children.push( val[0] )
  			@document_stack.first.blocks.store( val[0].name, val[0] )
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 150)
  def _reduce_49(val, _values, result)
     @document_stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 151)
  def _reduce_50(val, _values, result)
     @document_stack.last.children.push( val[0] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 152)
  def _reduce_51(val, _values, result)
     @document_stack.last.children.push( TextNode.new(val[1], val[1]) ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 153)
  def _reduce_52(val, _values, result)
     @document_stack.last.children.push( val[1] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 154)
  def _reduce_53(val, _values, result)
     @document_stack.last.children.push( val[1] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 155)
  def _reduce_54(val, _values, result)
     @document_stack.last.children.push( val[1] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 158)
  def _reduce_55(val, _values, result)
      			@document_stack.last.children.push( val[1] )
  			@document_stack.first.blocks.store( val[1].name, val[1] )
  		
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 161)
  def _reduce_56(val, _values, result)
     @document_stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 162)
  def _reduce_57(val, _values, result)
     @document_stack.last.children.push( val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
