#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

# parser.rb : generated by racc
  
module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 170)
attr_reader :lexer

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source

  @stack = [DocumentNode.new]

  do_parse

  @stack.first
end

def push_child(node)
  @stack.last.children.push(node)
end

def push_block(block_node)
  @stack.first.add_block(block_node)
  push_child(block_node)
end

def next_token
  @lexer.next_token
end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    32,    46,    47,    70,     3,     3,     4,     4,    32,
     3,    90,     4,    42,    21,    22,    23,    24,    32,     8,
     8,   110,    29,    29,     8,   126,    30,    30,    66,    31,
    31,    29,    33,    33,    32,    30,    62,   104,    31,    68,
    29,    33,    94,    95,    30,    32,    32,    31,    99,    70,
    33,    72,   105,    71,   112,     3,    29,     4,   107,     3,
    30,   100,   105,    31,   106,   120,    33,    29,    29,     8,
    96,    30,    30,     8,    31,    31,   122,    33,    33,     3,
     3,     4,     4,     3,     3,   124,     4,     3,     3,     4,
    97,    84,    64,     8,     8,    63,    93,     8,     8,    46,
    47,     8,     8,     3,     3,    65,   117,     3,    92,   119,
    50,    51,    52,    53,    54,    55,    89,     8,     8,    48,
    49,     8,    88,    87,    50,    51,    52,    53,    54,    55,
    73,    84,    57,    84,    56,    50,    51,    52,    53,    54,
    55,    50,    51,    52,    53,    54,    55,    50,    51,    52,
    53,    54,    55,    42,    21,    22,    23,    24,    20,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    42,    21,    22,    23,    24,    42,    21,
    22,    23,    24,    48,    49,    46,    47,    48,    49,    48,
    49,    48,    49,    48,    49,    48,    49,   115,    68,    66,
   118,    70,    60,    59,    41,    38,   123,    35,   125,    16,
   127 ]

racc_action_check = [
    97,   124,    76,    76,    61,   108,     0,   108,     0,   100,
     2,    61,     2,    32,    32,    32,    32,    32,    65,   108,
     0,    94,    97,   124,     2,   124,    97,   124,    97,    97,
   124,   100,    97,   124,   117,   100,    32,    84,   100,   100,
    65,   100,    65,    65,    65,   119,     4,    65,    68,    44,
    65,    44,   103,    44,   103,    91,   117,    91,    88,    69,
   117,    69,    86,   117,    86,   117,   117,   119,     4,    91,
    66,   119,     4,    69,   119,     4,   119,   119,     4,    40,
   118,    40,   118,   121,    37,   121,    37,     5,    67,     5,
    67,    72,    33,    40,   118,    33,    64,   121,    37,    26,
    26,     5,    67,    34,   109,    34,   109,   116,    63,   116,
    58,    58,    58,    58,    58,    58,    60,    34,   109,    83,
    83,   116,    59,    58,    28,    28,    28,    28,    28,    28,
    45,    57,    28,   105,    28,    45,    45,    45,    45,    45,
    45,    43,    43,    43,    43,    43,    43,   102,   102,   102,
   102,   102,   102,    53,    53,    53,    53,    53,     3,     3,
     3,     3,     3,    49,    49,    49,    49,    49,    50,    50,
    50,    50,    50,    51,    51,    51,    51,    51,    52,    52,
    52,    52,    52,    47,    47,    47,    47,    47,    54,    54,
    54,    54,    54,    55,    55,    55,    55,    55,   104,   104,
   104,   104,   104,    29,    29,    29,    29,    29,    70,    70,
    70,    70,    70,    46,    46,    46,    46,    46,    24,    24,
    24,    24,    24,    20,    20,    20,    20,    20,    48,    48,
    48,    48,    48,    27,    27,    77,    77,    78,    78,    79,
    79,    80,    80,    81,    81,    82,    82,   107,    38,    35,
   111,   113,    31,    30,    16,     7,   120,     6,   122,     1,
   126 ]

racc_action_pointer = [
   -15,   259,   -11,   156,    44,    66,   234,   232,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   254,   nil,   nil,   nil,
   221,   nil,   nil,   nil,   216,   nil,    91,   223,   112,   201,
   251,   250,    11,    90,    82,   219,   nil,    63,   216,   nil,
    58,   nil,   nil,   129,    31,   123,   211,   181,   226,   161,
   166,   171,   176,   151,   186,   191,   nil,   129,    98,    93,
    91,   -14,   nil,    83,    71,    16,    45,    67,    23,    38,
   206,   nil,    89,   nil,   nil,   nil,    -6,   227,   227,   229,
   231,   233,   235,   109,    18,   nil,    42,   nil,    56,   nil,
   nil,    34,   nil,   nil,    -4,   nil,   nil,    -2,   nil,   nil,
     7,   nil,   135,    32,   196,   131,   nil,   222,   -16,    83,
   nil,   225,   nil,   233,   nil,   nil,    86,    32,    59,    43,
   231,    62,   233,   nil,    -1,   nil,   235,   nil ]

racc_action_default = [
    -2,   -62,    -1,   -62,   -62,   -62,   -38,   -43,   -51,   -52,
   -53,   -54,   -55,   -56,   -58,   -60,   -62,   -57,   -59,   -61,
    -3,    -4,    -5,    -6,   -62,    -8,   -11,   -14,   -62,   -62,
   -62,   -62,   -62,   -62,   -62,   -62,   -37,   -62,   -62,   -42,
   -62,   128,    -3,   -21,   -62,   -62,   -62,   -62,   -62,   -62,
   -62,   -62,   -62,   -62,   -62,   -62,   -27,   -62,   -62,   -62,
   -62,   -62,   -45,   -62,   -62,   -62,   -62,   -62,   -62,   -62,
   -62,   -29,   -62,    -7,    -9,   -10,   -12,   -13,   -15,   -16,
   -17,   -18,   -19,   -20,   -23,   -25,   -62,   -31,   -62,   -40,
   -47,   -62,   -49,   -50,   -62,   -33,   -36,   -62,   -39,   -41,
   -62,   -44,   -22,   -62,   -62,   -62,   -28,   -62,   -62,   -62,
   -32,   -62,   -30,   -24,   -26,   -35,   -62,   -62,   -62,   -62,
   -62,   -62,   -62,   -46,   -62,   -48,   -62,   -34 ]

racc_goto_table = [
    17,    18,    44,    28,    19,    86,    76,    77,     2,   111,
    39,    37,    36,    34,    61,    74,    75,    40,    91,   108,
   103,   114,     1,   nil,    45,   nil,   nil,   nil,   nil,    58,
   nil,   nil,    17,    18,   nil,   nil,    19,    78,    79,    80,
    81,    82,    83,   nil,   nil,    67,   nil,   nil,    69,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    17,    18,    17,    18,    19,
   102,    19,   101,    98,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   113,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   109,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,    18,   nil,
   nil,    19,   nil,   nil,    17,    18,   116,   nil,    19,    17,
    18,   nil,   nil,    19,   nil,   nil,   121 ]

racc_goto_check = [
    26,    25,     7,     4,    20,     9,     5,     5,     2,    13,
    19,    17,    15,     2,     7,     3,     3,    21,    23,    24,
     9,     8,     1,   nil,     4,   nil,   nil,   nil,   nil,     4,
   nil,   nil,    26,    25,   nil,   nil,    20,     6,     6,     6,
     6,     6,     6,   nil,   nil,     2,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,    25,    26,    25,    20,
     4,    20,    19,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,    25,   nil,
   nil,    20,   nil,   nil,    26,    25,     2,   nil,    20,    26,
    25,   nil,   nil,    20,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    22,     8,   -31,     0,   -42,   -13,   -18,   -84,   -52,
   nil,   nil,   nil,   -86,   nil,     6,   nil,     5,   nil,     3,
     2,    10,   nil,   -44,   -71,    -1,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    25,    43,    26,    27,   nil,    85,   nil,
     9,     5,    10,   nil,     6,   nil,    11,   nil,     7,   nil,
    15,   nil,    12,   nil,   nil,    14,    13 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  0, 37, :_reduce_2,
  1, 39, :_reduce_3,
  1, 39, :_reduce_4,
  1, 39, :_reduce_5,
  1, 39, :_reduce_6,
  3, 39, :_reduce_7,
  1, 41, :_reduce_none,
  3, 41, :_reduce_9,
  3, 41, :_reduce_10,
  1, 42, :_reduce_none,
  3, 42, :_reduce_12,
  3, 42, :_reduce_13,
  1, 40, :_reduce_none,
  3, 40, :_reduce_15,
  3, 40, :_reduce_16,
  3, 40, :_reduce_17,
  3, 40, :_reduce_18,
  3, 40, :_reduce_19,
  3, 40, :_reduce_20,
  1, 43, :_reduce_21,
  3, 43, :_reduce_22,
  1, 44, :_reduce_23,
  3, 44, :_reduce_24,
  1, 45, :_reduce_25,
  3, 45, :_reduce_26,
  3, 46, :_reduce_27,
  5, 46, :_reduce_28,
  4, 46, :_reduce_29,
  6, 46, :_reduce_30,
  4, 47, :_reduce_31,
  5, 48, :_reduce_32,
  0, 49, :_reduce_33,
  10, 48, :_reduce_34,
  6, 50, :_reduce_35,
  3, 51, :_reduce_none,
  2, 52, :_reduce_37,
  0, 53, :_reduce_38,
  4, 52, :_reduce_39,
  4, 54, :_reduce_40,
  3, 55, :_reduce_none,
  2, 56, :_reduce_42,
  0, 57, :_reduce_43,
  4, 56, :_reduce_44,
  0, 59, :_reduce_45,
  8, 58, :_reduce_46,
  0, 60, :_reduce_47,
  9, 58, :_reduce_48,
  4, 61, :_reduce_49,
  4, 61, :_reduce_50,
  1, 62, :_reduce_51,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 38, :_reduce_56,
  2, 38, :_reduce_57,
  1, 38, :_reduce_58,
  2, 38, :_reduce_59,
  1, 38, :_reduce_60,
  2, 38, :_reduce_61 ]

racc_reduce_n = 62

racc_shift_n = 128

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :INTEGER => 3,
  :REAL => 4,
  :STRING => 5,
  "(" => 6,
  ")" => 7,
  "*" => 8,
  "/" => 9,
  "+" => 10,
  "-" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_LEQ => 14,
  :OP_GEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  ":" => 19,
  "|" => 20,
  :VAR_OPEN => 21,
  :VAR_CLOSE => 22,
  :STMT_OPEN => 23,
  :IF => 24,
  :STMT_CLOSE => 25,
  :ENDIF => 26,
  :ELSE => 27,
  :FOR => 28,
  :IN => 29,
  :ENDFOR => 30,
  :BLOCK => 31,
  :ENDBLOCK => 32,
  :END => 33,
  :EXTENDS => 34,
  :TEXT_BLOCK => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ENDIF",
  "ELSE",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "END",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "boolean_expression",
  "multiplicative_expression",
  "additive_expression",
  "parameter_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_statement",
  "if_block",
  "@1",
  "for_tag",
  "end_for_tag",
  "for_block",
  "@2",
  "block_tag",
  "end_block_tag",
  "block_block",
  "@3",
  "generic_block",
  "@4",
  "@5",
  "extends_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 8)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 14)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 15)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 16)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cadenza.y', 21)
  def _reduce_9(val, _values, result)
     result = ArithmeticNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 22)
  def _reduce_10(val, _values, result)
     result = ArithmeticNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 27)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 28)
  def _reduce_13(val, _values, result)
     result = ArithmeticNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 33)
  def _reduce_15(val, _values, result)
     result = BooleanNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_16(val, _values, result)
     result = BooleanNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 36)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 37)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 38)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 42)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 43)
  def _reduce_22(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 47)
  def _reduce_23(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 48)
  def _reduce_24(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 52)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 53)
  def _reduce_26(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 58)
  def _reduce_27(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_28(val, _values, result)
     result = InjectNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 63)
  def _reduce_29(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, [], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 68)
  def _reduce_30(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, val[4], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 76)
  def _reduce_31(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 84)
  def _reduce_32(val, _values, result)
            result = IfNode.new(val[0], @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 87)
  def _reduce_33(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 90)
  def _reduce_34(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 96)
  def _reduce_35(val, _values, result)
     result = [val[2].value, val[4].value] 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'cadenza.y', 106)
  def _reduce_37(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = VariableNode.new(val[0][1])
        
        result = ForNode.new(iterator, iterable, [])      
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 111)
  def _reduce_38(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 113)
  def _reduce_39(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = VariableNode.new(val[0][1])
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 121)
  def _reduce_40(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'cadenza.y', 130)
  def _reduce_42(val, _values, result)
     result = BlockNode.new(val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 131)
  def _reduce_43(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 131)
  def _reduce_44(val, _values, result)
     result = BlockNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 135)
  def _reduce_45(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 137)
  def _reduce_46(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 138)
  def _reduce_47(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 140)
  def _reduce_48(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 144)
  def _reduce_49(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 145)
  def _reduce_50(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 149)
  def _reduce_51(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'cadenza.y', 157)
  def _reduce_56(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 158)
  def _reduce_57(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 159)
  def _reduce_58(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 160)
  def _reduce_59(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 161)
  def _reduce_60(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 162)
  def _reduce_61(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
