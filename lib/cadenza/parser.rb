#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

# parser.rb : generated by racc
  
module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 139)
attr_reader :lexer, :container_name

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source

  @stack = [DocumentNode.new]

  do_parse

  @stack.first
end

def push_child(node)
  @stack.last.children.push(node)
end

def push_block(block_node)
  @stack.first.add_block(block_node)
  push_child(block_node)
end

def next_token
  @lexer.next_token
end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     3,     4,     4,     3,     3,     4,    94,    32,    18,
    19,    20,    21,     6,     6,    36,    37,     6,     6,    40,
    41,    42,    43,    44,    45,     3,     3,     4,    98,     3,
    90,     4,    71,     3,     3,    53,    99,    52,     6,     6,
    51,     3,     6,     4,    38,    39,     6,     6,    40,    41,
    42,    43,    44,    45,     6,    57,    47,    81,    46,    82,
    40,    41,    42,    43,    44,    45,    26,    54,    68,    56,
    27,    55,    75,    28,    97,    29,    26,    74,    76,    77,
    27,    68,    26,    28,    85,    29,    27,    73,   102,    28,
    26,    29,   101,    81,    27,    87,    26,    28,    92,    29,
    27,    38,    39,    28,    54,    29,    40,    41,    42,    43,
    44,    45,    40,    41,    42,    43,    44,    45,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    17,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    32,    18,    19,    20,    21,    32,    18,
    19,    20,    21,    38,    39,    38,    39,    38,    39,    38,
    39,    36,    37,    36,    37,    38,    39,    72,    68,    50,
    49,    83,    80,   100,    31,    13,   103,   104 ]

racc_action_check = [
     0,    84,     0,    84,     2,    91,     2,    91,    36,    36,
    36,    36,    36,     0,    84,    61,    61,     2,    91,    48,
    48,    48,    48,    48,    48,     5,    95,     5,    95,    93,
    83,    93,    48,    30,    96,    30,    96,    29,     5,    95,
    29,    92,    93,    92,    62,    62,    30,    96,    25,    25,
    25,    25,    25,    25,    92,    35,    25,    70,    25,    70,
    35,    35,    35,    35,    35,    35,    94,    34,    56,    34,
    94,    34,    52,    94,    94,    94,    53,    51,    53,    53,
    53,    81,    99,    53,    76,    53,    99,    50,    99,    99,
    98,    99,    98,    79,    98,    79,     4,    98,    86,    98,
     4,    63,    63,     4,    88,     4,    33,    33,    33,    33,
    33,    33,    78,    78,    78,    78,    78,    78,    37,    37,
    37,    37,    37,    38,    38,    38,    38,    38,    39,    39,
    39,    39,    39,    40,    40,    40,    40,    40,    41,    41,
    41,    41,    41,    17,    17,    17,    17,    17,    43,    43,
    43,    43,    43,    44,    44,    44,    44,    44,    26,    26,
    26,    26,    26,    21,    21,    21,    21,    21,     3,     3,
     3,     3,     3,    42,    42,    42,    42,    42,    80,    80,
    80,    80,    80,    54,    54,    54,    54,    54,    45,    45,
    45,    45,    45,    64,    64,    65,    65,    66,    66,    67,
    67,    23,    23,    60,    60,    24,    24,    49,    47,    28,
    27,    72,    68,    97,    13,     1,   101,   102 ]

racc_action_pointer = [
   -21,   215,   -17,   166,    72,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   214,   nil,   nil,   nil,   141,   nil,   nil,
   nil,   161,   nil,   193,   195,    36,   156,   208,   207,    35,
    12,   nil,   nil,    94,    49,    48,     6,   116,   121,   126,
   131,   136,   171,   146,   151,   186,   nil,   206,     7,   178,
    62,    52,    47,    52,   181,   nil,    66,   nil,   nil,   nil,
   195,     7,    34,    91,   183,   185,   187,   189,   193,   nil,
    37,   nil,   209,   nil,   nil,   nil,    59,   nil,   100,    73,
   176,    79,   nil,     5,   -20,   nil,    73,   nil,    86,   nil,
   nil,   -16,    20,     8,    42,     5,    13,   188,    66,    58,
   nil,   191,   192,   nil,   nil ]

racc_action_default = [
    -2,   -51,    -1,   -51,   -51,   -51,   -41,   -42,   -43,   -44,
   -45,   -47,   -49,   -51,   -46,   -48,   -50,    -3,    -4,    -5,
    -6,   -51,    -8,   -11,   -14,   -51,   -51,   -51,   -51,   -51,
   -51,   105,    -3,   -21,   -51,   -51,   -51,   -51,   -51,   -51,
   -51,   -51,   -51,   -51,   -51,   -51,   -27,   -51,   -51,   -51,
   -51,   -51,   -51,   -51,   -51,   -29,   -51,    -7,    -9,   -10,
   -12,   -13,   -15,   -16,   -17,   -18,   -19,   -20,   -23,   -25,
   -51,   -31,   -51,   -37,   -39,   -40,   -51,   -33,   -22,   -51,
   -51,   -51,   -28,   -51,   -51,   -32,   -51,   -30,   -24,   -26,
   -35,   -51,   -51,   -51,   -51,   -51,   -51,   -51,   -51,   -51,
   -38,   -51,   -51,   -34,   -36 ]

racc_goto_table = [
    14,    34,    15,    25,    70,    89,     2,    86,    16,    60,
    61,    30,    84,    79,    62,    63,    64,    65,    66,    67,
    93,    35,    58,    59,     1,   nil,    48,   nil,    14,   nil,
    15,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    88,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,
    91,    15,   nil,    14,    14,    15,    15,    16,    95,    96,
   nil,    16,    16 ]

racc_goto_check = [
    19,     7,    18,     4,     9,     8,     2,    13,    16,     5,
     5,     2,    17,     9,     6,     6,     6,     6,     6,     6,
    15,     4,     3,     3,     1,   nil,     4,   nil,    19,   nil,
    18,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
     2,    18,   nil,    19,    19,    18,    18,    16,     2,     2,
   nil,    16,    16 ]

racc_goto_pointer = [
   nil,    24,     6,   -14,     0,   -29,   -26,   -16,   -76,   -43,
   nil,   nil,   nil,   -70,   nil,   -70,     6,   -61,     0,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    22,    33,    23,    24,   nil,    69,   nil,
     7,     5,     8,   nil,     9,   nil,    12,   nil,    11,    10 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 36, :_reduce_none,
  0, 36, :_reduce_2,
  1, 38, :_reduce_3,
  1, 38, :_reduce_4,
  1, 38, :_reduce_5,
  1, 38, :_reduce_6,
  3, 38, :_reduce_7,
  1, 40, :_reduce_none,
  3, 40, :_reduce_9,
  3, 40, :_reduce_10,
  1, 41, :_reduce_none,
  3, 41, :_reduce_12,
  3, 41, :_reduce_13,
  1, 39, :_reduce_none,
  3, 39, :_reduce_15,
  3, 39, :_reduce_16,
  3, 39, :_reduce_17,
  3, 39, :_reduce_18,
  3, 39, :_reduce_19,
  3, 39, :_reduce_20,
  1, 42, :_reduce_21,
  3, 42, :_reduce_22,
  1, 43, :_reduce_23,
  3, 43, :_reduce_24,
  1, 44, :_reduce_25,
  3, 44, :_reduce_26,
  3, 45, :_reduce_27,
  5, 45, :_reduce_28,
  4, 45, :_reduce_29,
  6, 45, :_reduce_30,
  4, 46, :_reduce_31,
  5, 47, :_reduce_32,
  0, 48, :_reduce_33,
  10, 47, :_reduce_34,
  0, 50, :_reduce_35,
  11, 49, :_reduce_36,
  0, 52, :_reduce_37,
  9, 51, :_reduce_38,
  4, 53, :_reduce_39,
  4, 53, :_reduce_40,
  1, 54, :_reduce_41,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 37, :_reduce_45,
  2, 37, :_reduce_46,
  1, 37, :_reduce_47,
  2, 37, :_reduce_48,
  1, 37, :_reduce_49,
  2, 37, :_reduce_50 ]

racc_reduce_n = 51

racc_shift_n = 105

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :INTEGER => 3,
  :REAL => 4,
  :STRING => 5,
  "(" => 6,
  ")" => 7,
  "*" => 8,
  "/" => 9,
  "+" => 10,
  "-" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_LEQ => 14,
  :OP_GEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  ":" => 19,
  "|" => 20,
  :VAR_OPEN => 21,
  :VAR_CLOSE => 22,
  :STMT_OPEN => 23,
  :IF => 24,
  :STMT_CLOSE => 25,
  :ENDIF => 26,
  :ELSE => 27,
  :FOR => 28,
  :IN => 29,
  :ENDFOR => 30,
  :BLOCK => 31,
  :ENDBLOCK => 32,
  :EXTENDS => 33,
  :TEXT_BLOCK => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ENDIF",
  "ELSE",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "boolean_expression",
  "multiplicative_expression",
  "additive_expression",
  "parameter_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_statement",
  "if_block",
  "@1",
  "for_block",
  "@2",
  "block_block",
  "@3",
  "extends_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 5)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 9)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 10)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 11)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_9(val, _values, result)
     result = ArithmeticNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 19)
  def _reduce_10(val, _values, result)
     result = ArithmeticNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 24)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 25)
  def _reduce_13(val, _values, result)
     result = ArithmeticNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 30)
  def _reduce_15(val, _values, result)
     result = BooleanNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 31)
  def _reduce_16(val, _values, result)
     result = BooleanNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 32)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 33)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 39)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 40)
  def _reduce_22(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_23(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 45)
  def _reduce_24(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 49)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_26(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_27(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 57)
  def _reduce_28(val, _values, result)
     result = InjectNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_29(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, [], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 65)
  def _reduce_30(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, val[4], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 73)
  def _reduce_31(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 81)
  def _reduce_32(val, _values, result)
            result = IfNode.new(val[0], @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 84)
  def _reduce_33(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 87)
  def _reduce_34(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 94)
  def _reduce_35(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 98)
  def _reduce_36(val, _values, result)
            iterator = VariableNode.new(val[2].value)
        iterable = VariableNode.new(val[4].value)
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 107)
  def _reduce_37(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 110)
  def _reduce_38(val, _values, result)
     result = BlockNode.new(val[2].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 114)
  def _reduce_39(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 115)
  def _reduce_40(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 119)
  def _reduce_41(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'cadenza.y', 126)
  def _reduce_45(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 127)
  def _reduce_46(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 128)
  def _reduce_47(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 129)
  def _reduce_48(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 130)
  def _reduce_49(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 131)
  def _reduce_50(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
