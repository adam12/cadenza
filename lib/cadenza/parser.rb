#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

# parser.rb : generated by racc
  
module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 185)
attr_reader :lexer

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source

  @stack = [DocumentNode.new]

  do_parse

  @stack.first
end

def push_child(node)
  @stack.last.children.push(node)
end

def push_block(block_node)
  @stack.first.add_block(block_node)
  push_child(block_node)
end

def next_token
  @lexer.next_token
end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    45,    21,    22,    23,    24,    51,    52,    32,     3,
    77,     4,    67,    32,     3,    66,     4,    97,   116,    91,
   117,    32,    29,     8,    65,   116,    30,   122,     8,    31,
    29,   130,    33,    69,    30,    29,    32,    31,   110,    30,
    33,    73,    31,    29,   107,    33,   102,    30,    32,    32,
    31,    75,     3,    33,     4,     3,   115,   103,    29,    77,
   101,    79,    30,    78,   118,    31,     8,   129,    33,     8,
    29,    29,    68,    69,    30,    30,   100,    31,    31,    99,
    33,    33,     3,     3,   111,     4,     3,     3,   103,     4,
     3,     3,     4,   128,    51,    52,     8,     8,    51,    52,
     8,     8,    51,    52,     8,     8,     3,     3,   108,   127,
     3,     3,    34,     4,     3,     3,   103,    34,    49,    50,
     8,     8,    51,    52,     8,     8,    49,    50,     8,     8,
    53,    54,    55,    56,    57,    58,    53,    54,    55,    56,
    57,    58,    80,    94,    60,    96,    59,    53,    54,    55,
    56,    57,    58,    53,    54,    55,    56,    57,    58,    53,
    54,    55,    56,    57,    58,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    20,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    45,    21,    22,    23,    24,
    45,    21,    22,    23,    24,    49,    50,    51,    52,    51,
    52,    95,    91,    75,    73,    63,    91,   125,    62,    44,
    77,    41,    38,    16,   131,   132 ]

racc_action_check = [
   128,    32,    32,    32,    32,    32,    27,    27,   103,    40,
    64,    40,    33,   108,    98,    33,    98,    64,    93,    79,
    93,   111,   128,    40,    32,   114,   128,   114,    98,   128,
   103,   128,   128,   103,   103,   108,   127,   103,    75,   108,
   103,   108,   108,   111,    73,   108,    69,   111,    34,     4,
   111,   111,     0,   111,     0,    71,    91,    71,   127,    47,
    68,    47,   127,    47,    95,   127,     0,   127,   127,    71,
    34,     4,    34,    34,    34,     4,    67,    34,     4,    66,
    34,     4,    76,    43,    76,    43,   105,   119,   105,   119,
     2,   126,     2,   126,    86,    86,    76,    43,    88,    88,
   105,   119,    89,    89,     2,   126,    74,   120,    74,   120,
    36,    37,    36,    37,    72,     5,    72,     5,    26,    26,
    74,   120,    87,    87,    36,    37,    83,    83,    72,     5,
    61,    61,    61,    61,    61,    61,    28,    28,    28,    28,
    28,    28,    48,    61,    28,    63,    28,    48,    48,    48,
    48,    48,    48,    46,    46,    46,    46,    46,    46,   113,
   113,   113,   113,   113,   113,    51,    51,    51,    51,    51,
    52,    52,    52,    52,    52,    53,    53,    53,    53,    53,
    54,    54,    54,    54,    54,    55,    55,    55,    55,    55,
    56,    56,    56,    56,    56,    57,    57,    57,    57,    57,
    58,    58,    58,    58,    58,     3,     3,     3,     3,     3,
    50,    50,    50,    50,    50,   115,   115,   115,   115,   115,
    29,    29,    29,    29,    29,    77,    77,    77,    77,    77,
    24,    24,    24,    24,    24,    20,    20,    20,    20,    20,
    49,    49,    49,    49,    49,    84,    84,    85,    85,    90,
    90,    62,    60,    41,    38,    31,   116,   118,    30,    16,
   123,     7,     6,     1,   129,   130 ]

racc_action_pointer = [
    31,   263,    69,   203,    47,    94,   239,   238,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   259,   nil,   nil,   nil,
   233,   nil,   nil,   nil,   228,   nil,   110,    -4,   124,   218,
   256,   253,    -1,    10,    46,   nil,    89,    90,   224,   nil,
   -12,   221,   nil,    62,   nil,   nil,   141,    41,   135,   238,
   208,   163,   168,   173,   178,   183,   188,   193,   198,   nil,
   250,   118,   222,   120,    -8,   nil,    54,    51,    35,    21,
   nil,    34,    93,    19,    85,    13,    61,   223,   nil,    17,
   nil,   nil,   nil,   118,   237,   237,    84,   112,    88,    92,
   239,    37,   nil,    -2,   nil,    62,   nil,   nil,    -7,   nil,
   nil,   nil,   nil,     6,   nil,    65,   nil,   nil,    11,   nil,
   nil,    19,   nil,   147,     5,   213,   254,   nil,   232,    66,
    86,   nil,   nil,   242,   nil,   nil,    70,    34,    -2,   239,
   240,   nil,   nil ]

racc_action_default = [
    -2,   -66,    -1,   -66,   -66,   -66,   -42,   -47,   -55,   -56,
   -57,   -58,   -59,   -60,   -62,   -64,   -66,   -61,   -63,   -65,
    -3,    -4,    -5,    -6,   -66,    -8,   -11,   -14,   -66,   -66,
   -66,   -66,   -66,   -66,   -66,   -34,   -66,   -66,   -66,   -41,
   -66,   -66,   -46,   -66,   133,    -3,   -21,   -66,   -66,   -66,
   -66,   -66,   -66,   -66,   -66,   -66,   -66,   -66,   -66,   -27,
   -66,   -66,   -66,   -66,   -66,   -49,   -66,   -66,   -66,   -66,
   -35,   -66,   -66,   -66,   -66,   -66,   -66,   -66,   -29,   -66,
    -7,    -9,   -10,   -12,   -13,   -15,   -16,   -17,   -18,   -19,
   -20,   -23,   -25,   -66,   -31,   -66,   -44,   -51,   -66,   -53,
   -54,   -32,   -33,   -66,   -37,   -66,   -36,   -40,   -66,   -43,
   -45,   -66,   -48,   -22,   -66,   -66,   -66,   -28,   -66,   -66,
   -66,   -38,   -30,   -24,   -26,   -39,   -66,   -66,   -66,   -66,
   -66,   -50,   -52 ]

racc_goto_table = [
    17,    19,    35,    28,    47,    37,    93,    42,    18,    40,
     2,    39,    81,    82,    43,    36,    64,    85,    86,    87,
    88,    89,    90,    98,    48,   114,    83,    84,   119,    61,
   124,     1,   nil,    70,    17,    19,    71,   nil,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,    72,   nil,   nil,
    74,   nil,   nil,    76,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   104,   106,
    17,    19,    17,    19,    17,    19,   112,   113,    18,   109,
    18,   105,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   nil,   nil,   121,    17,    19,   nil,   nil,   nil,   120,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    17,    19,
   nil,   nil,   nil,   nil,    17,    19,    18,   nil,   nil,   126,
   nil,   nil,    18 ]

racc_goto_check = [
    27,    21,    13,     4,     7,    12,     9,    20,    26,    18,
     2,    16,     3,     3,    22,     2,     7,     6,     6,     6,
     6,     6,     6,    24,     4,     9,     5,     5,    25,     4,
     8,     1,   nil,    13,    27,    21,    12,   nil,   nil,   nil,
   nil,   nil,    26,   nil,   nil,   nil,   nil,     2,   nil,   nil,
     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,    13,
    27,    21,    27,    21,    27,    21,    20,     4,    26,    16,
    26,     2,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,
   nil,   nil,    13,    27,    21,   nil,   nil,   nil,     2,   nil,
   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,    27,    21,
   nil,   nil,   nil,   nil,    27,    21,    26,   nil,   nil,     2,
   nil,   nil,    26 ]

racc_goto_pointer = [
   nil,    31,    10,   -37,     0,   -25,   -36,   -16,   -86,   -54,
   nil,   nil,     0,    -3,   nil,   nil,     5,   nil,     3,   nil,
     0,    -1,     7,   nil,   -42,   -69,     6,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    25,    46,    26,    27,   nil,    92,   nil,
     9,     5,   nil,   nil,    10,     6,   nil,    11,   nil,     7,
   nil,    15,   nil,    12,   nil,   nil,    14,    13 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  0, 37, :_reduce_2,
  1, 39, :_reduce_3,
  1, 39, :_reduce_4,
  1, 39, :_reduce_5,
  1, 39, :_reduce_6,
  3, 39, :_reduce_7,
  1, 41, :_reduce_none,
  3, 41, :_reduce_9,
  3, 41, :_reduce_10,
  1, 42, :_reduce_none,
  3, 42, :_reduce_12,
  3, 42, :_reduce_13,
  1, 40, :_reduce_none,
  3, 40, :_reduce_15,
  3, 40, :_reduce_16,
  3, 40, :_reduce_17,
  3, 40, :_reduce_18,
  3, 40, :_reduce_19,
  3, 40, :_reduce_20,
  1, 43, :_reduce_21,
  3, 43, :_reduce_22,
  1, 44, :_reduce_23,
  3, 44, :_reduce_24,
  1, 45, :_reduce_25,
  3, 45, :_reduce_26,
  3, 46, :_reduce_27,
  5, 46, :_reduce_28,
  4, 46, :_reduce_29,
  6, 46, :_reduce_30,
  4, 47, :_reduce_31,
  3, 48, :_reduce_32,
  3, 49, :_reduce_none,
  2, 50, :_reduce_34,
  3, 50, :_reduce_35,
  4, 50, :_reduce_36,
  4, 50, :_reduce_37,
  5, 50, :_reduce_38,
  6, 51, :_reduce_39,
  3, 52, :_reduce_none,
  2, 53, :_reduce_41,
  0, 54, :_reduce_42,
  4, 53, :_reduce_43,
  4, 55, :_reduce_44,
  3, 56, :_reduce_none,
  2, 57, :_reduce_46,
  0, 58, :_reduce_47,
  4, 57, :_reduce_48,
  0, 60, :_reduce_49,
  8, 59, :_reduce_50,
  0, 61, :_reduce_51,
  9, 59, :_reduce_52,
  4, 62, :_reduce_53,
  4, 62, :_reduce_54,
  1, 63, :_reduce_55,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 38, :_reduce_60,
  2, 38, :_reduce_61,
  1, 38, :_reduce_62,
  2, 38, :_reduce_63,
  1, 38, :_reduce_64,
  2, 38, :_reduce_65 ]

racc_reduce_n = 66

racc_shift_n = 133

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :INTEGER => 3,
  :REAL => 4,
  :STRING => 5,
  "(" => 6,
  ")" => 7,
  "*" => 8,
  "/" => 9,
  "+" => 10,
  "-" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_LEQ => 14,
  :OP_GEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  ":" => 19,
  "|" => 20,
  :VAR_OPEN => 21,
  :VAR_CLOSE => 22,
  :STMT_OPEN => 23,
  :IF => 24,
  :STMT_CLOSE => 25,
  :ELSE => 26,
  :ENDIF => 27,
  :FOR => 28,
  :IN => 29,
  :ENDFOR => 30,
  :BLOCK => 31,
  :ENDBLOCK => 32,
  :END => 33,
  :EXTENDS => 34,
  :TEXT_BLOCK => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ELSE",
  "ENDIF",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "END",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "boolean_expression",
  "multiplicative_expression",
  "additive_expression",
  "parameter_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_tag",
  "else_tag",
  "end_if_tag",
  "if_block",
  "for_tag",
  "end_for_tag",
  "for_block",
  "@1",
  "block_tag",
  "end_block_tag",
  "block_block",
  "@2",
  "generic_block",
  "@3",
  "@4",
  "extends_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 8)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 14)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 15)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 16)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cadenza.y', 21)
  def _reduce_9(val, _values, result)
     result = ArithmeticNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 22)
  def _reduce_10(val, _values, result)
     result = ArithmeticNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 27)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 28)
  def _reduce_13(val, _values, result)
     result = ArithmeticNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 33)
  def _reduce_15(val, _values, result)
     result = BooleanNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_16(val, _values, result)
     result = BooleanNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 36)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 37)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 38)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 42)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 43)
  def _reduce_22(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 47)
  def _reduce_23(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 48)
  def _reduce_24(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 52)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 53)
  def _reduce_26(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 58)
  def _reduce_27(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_28(val, _values, result)
     result = InjectNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 63)
  def _reduce_29(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, [], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 68)
  def _reduce_30(val, _values, result)
            variable = VariableNode.new(val[1].value)
        result = InjectNode.new(variable, val[4], val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 76)
  def _reduce_31(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 82)
  def _reduce_32(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'cadenza.y', 90)
  def _reduce_34(val, _values, result)
     @stack.pop; result = IfNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 91)
  def _reduce_35(val, _values, result)
     result = IfNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 94)
  def _reduce_36(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 99)
  def _reduce_37(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 104)
  def _reduce_38(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 110)
  def _reduce_39(val, _values, result)
     result = [val[2].value, val[4].value] 
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'cadenza.y', 121)
  def _reduce_41(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = VariableNode.new(val[0][1])
        
        result = ForNode.new(iterator, iterable, [])      
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 126)
  def _reduce_42(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 128)
  def _reduce_43(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = VariableNode.new(val[0][1])
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 136)
  def _reduce_44(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'cadenza.y', 145)
  def _reduce_46(val, _values, result)
     result = BlockNode.new(val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 146)
  def _reduce_47(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 146)
  def _reduce_48(val, _values, result)
     result = BlockNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 150)
  def _reduce_49(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 152)
  def _reduce_50(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 153)
  def _reduce_51(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 155)
  def _reduce_52(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 159)
  def _reduce_53(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 160)
  def _reduce_54(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 164)
  def _reduce_55(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'cadenza.y', 172)
  def _reduce_60(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 173)
  def _reduce_61(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 174)
  def _reduce_62(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 175)
  def _reduce_63(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 176)
  def _reduce_64(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 177)
  def _reduce_65(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
