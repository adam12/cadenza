#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

# parser.rb : generated by racc
  
module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 133)
attr_reader :lexer, :container_name

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source

  @stack = [DocumentNode.new]

  do_parse

  @stack.first
end

def push_child(node)
  @stack.last.children.push(node)
end

def push_block(block_node)
  @stack.first.add_block(block_node)
  push_child(block_node)
end

def next_token
  @lexer.next_token
end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    31,    18,    19,    20,    21,    22,    31,    79,     3,    75,
    98,    80,    51,    81,    31,    50,    76,    37,    38,    82,
    31,     6,    27,    67,    54,    89,    28,    85,    27,    29,
    96,    30,    28,    31,   101,    29,    27,    30,    77,    78,
    28,    49,    27,    29,   100,    30,    28,    91,     3,    29,
    97,    30,     3,    75,     4,    27,     3,    48,     4,    28,
    74,     6,    29,    73,    30,     6,     3,    72,    55,     6,
     3,     3,     4,    93,     3,     3,     4,     4,     3,     6,
     4,    37,    38,     6,     6,    37,    38,     6,     6,    37,
    38,     6,    39,    40,    41,    42,    43,    44,    37,    38,
    71,    56,    37,    38,    33,    70,    39,    40,    41,    42,
    43,    44,    39,    40,    41,    42,    43,    44,    35,    36,
    46,    99,    45,    39,    40,    41,    42,    43,    44,    39,
    40,    41,    42,    43,    44,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    18,    19,    20,    21,    22,    18,    19,    20,    21,    22,
    35,    36,    37,    38,    35,    36,    67,    14,   102,   103 ]

racc_action_check = [
    93,    31,    31,    31,    31,    31,    98,    67,    95,    53,
    95,    69,    30,    69,    55,    30,    53,    65,    65,    71,
    97,    95,    93,    80,    31,    82,    93,    77,    98,    93,
    93,    93,    98,     4,    98,    98,    55,    98,    55,    55,
    55,    29,    97,    55,    97,    55,    97,    86,    94,    97,
    94,    97,     5,    87,     5,     4,    92,    28,    92,     4,
    51,    94,     4,    50,     4,     5,    32,    49,    32,    92,
    91,    90,    91,    90,     2,    83,     2,    83,     0,    32,
     0,    62,    62,    91,    90,    63,    63,     2,    83,    64,
    64,     0,    47,    47,    47,    47,    47,    47,    61,    61,
    48,    34,    66,    66,    14,    47,    34,    34,    34,    34,
    34,    34,    26,    26,    26,    26,    26,    26,    59,    59,
    26,    96,    26,    84,    84,    84,    84,    84,    84,    52,
    52,    52,    52,    52,    52,    39,    39,    39,    39,    39,
    40,    40,    40,    40,    40,    41,    41,    41,    41,    41,
    42,    42,    42,    42,    42,    43,    43,    43,    43,    43,
    44,    44,    44,    44,    44,     3,     3,     3,     3,     3,
    38,    38,    38,    38,    38,    22,    22,    22,    22,    22,
    75,    75,    75,    75,    75,    79,    79,    79,    79,    79,
    27,    27,    27,    27,    27,    37,    37,    37,    37,    37,
    35,    35,    35,    35,    35,    36,    36,    36,    36,    36,
    60,    60,    25,    25,    24,    24,    46,     1,   100,   101 ]

racc_action_pointer = [
    57,   217,    53,   163,    31,    31,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   104,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   173,   nil,   206,   202,   100,   188,    55,    39,
    10,    -1,    45,   nil,    94,   198,   203,   193,   168,   133,
   138,   143,   148,   153,   158,   nil,   214,    80,    71,    42,
    38,    35,   117,    -9,   nil,    12,   nil,   nil,   nil,   110,
   202,    88,    71,    75,    79,     7,    92,   -12,   nil,    -9,
   nil,    17,   nil,   nil,   nil,   178,   nil,     2,   nil,   183,
    21,   nil,     0,    54,   111,   nil,    22,    35,   nil,   nil,
    50,    49,    35,    -2,    27,   -13,    96,    18,     4,   nil,
   193,   194,   nil,   nil ]

racc_action_default = [
    -2,   -52,    -1,   -52,   -52,   -52,   -41,   -42,   -43,   -44,
   -45,   -46,   -48,   -50,   -52,   -47,   -49,   -51,    -3,    -4,
    -5,    -6,   -52,    -8,   -11,   -14,   -52,   -52,   -52,   -52,
   -52,   -52,   -52,   104,   -52,   -52,   -52,   -52,   -52,   -52,
   -52,   -52,   -52,   -52,   -52,   -27,   -52,   -52,   -52,   -52,
   -52,   -52,   -21,   -52,   -39,   -52,    -7,    -9,   -10,   -12,
   -13,   -15,   -16,   -17,   -18,   -19,   -20,   -23,   -25,   -52,
   -29,   -52,   -35,   -37,   -38,   -52,   -40,   -52,   -31,   -52,
   -52,   -28,   -52,   -52,   -22,   -30,   -52,   -24,   -26,   -33,
   -52,   -52,   -52,   -52,   -52,   -52,   -52,   -52,   -52,   -36,
   -52,   -52,   -32,   -34 ]

racc_goto_table = [
    15,    26,    17,    53,    92,    68,     2,    86,    16,    57,
    58,    32,    61,    62,    63,    64,    65,    66,    59,    60,
    34,    83,    69,     1,   nil,    47,   nil,   nil,   nil,   nil,
    15,   nil,    17,   nil,   nil,   nil,   nil,   nil,    16,    88,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    87,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    90,
    17,   nil,    15,    15,    17,    17,    16,    94,    95,   nil,
    16,    16 ]

racc_goto_check = [
    20,     4,    16,     7,    15,     8,     2,    13,    18,     3,
     3,     2,     6,     6,     6,     6,     6,     6,     5,     5,
     4,    17,     9,     1,   nil,     4,   nil,   nil,   nil,   nil,
    20,   nil,    16,   nil,   nil,   nil,   nil,   nil,    18,     8,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,     2,
    16,   nil,    20,    20,    16,    16,    18,     2,     2,   nil,
    18,    18 ]

racc_goto_pointer = [
   nil,    23,     6,   -26,    -2,   -19,   -27,   -28,   -41,   -24,
   nil,   nil,   nil,   -71,   nil,   -85,     0,   -51,     6,   nil,
    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    23,    52,    24,    25,   nil,   nil,   nil,
     7,     5,     8,   nil,     9,   nil,    13,   nil,    12,    10,
    11 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 36, :_reduce_none,
  0, 36, :_reduce_2,
  1, 38, :_reduce_3,
  1, 38, :_reduce_4,
  1, 38, :_reduce_5,
  1, 38, :_reduce_6,
  3, 38, :_reduce_7,
  1, 40, :_reduce_none,
  3, 40, :_reduce_9,
  3, 40, :_reduce_10,
  1, 41, :_reduce_none,
  3, 41, :_reduce_12,
  3, 41, :_reduce_13,
  1, 39, :_reduce_none,
  3, 39, :_reduce_15,
  3, 39, :_reduce_16,
  3, 39, :_reduce_17,
  3, 39, :_reduce_18,
  3, 39, :_reduce_19,
  3, 39, :_reduce_20,
  1, 42, :_reduce_21,
  3, 42, :_reduce_22,
  1, 43, :_reduce_23,
  3, 43, :_reduce_24,
  1, 44, :_reduce_25,
  3, 44, :_reduce_26,
  3, 45, :_reduce_27,
  5, 45, :_reduce_28,
  4, 46, :_reduce_29,
  5, 47, :_reduce_30,
  0, 48, :_reduce_31,
  10, 47, :_reduce_32,
  0, 50, :_reduce_33,
  11, 49, :_reduce_34,
  0, 52, :_reduce_35,
  9, 51, :_reduce_36,
  4, 53, :_reduce_37,
  4, 53, :_reduce_38,
  3, 54, :_reduce_39,
  4, 54, :_reduce_40,
  1, 55, :_reduce_41,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 37, :_reduce_46,
  2, 37, :_reduce_47,
  1, 37, :_reduce_48,
  2, 37, :_reduce_49,
  1, 37, :_reduce_50,
  2, 37, :_reduce_51 ]

racc_reduce_n = 52

racc_shift_n = 104

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :INTEGER => 3,
  :REAL => 4,
  :STRING => 5,
  "(" => 6,
  ")" => 7,
  "*" => 8,
  "/" => 9,
  "+" => 10,
  "-" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_LEQ => 14,
  :OP_GEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  ":" => 19,
  "|" => 20,
  :VAR_OPEN => 21,
  :VAR_CLOSE => 22,
  :STMT_OPEN => 23,
  :IF => 24,
  :STMT_CLOSE => 25,
  :ENDIF => 26,
  :ELSE => 27,
  :FOR => 28,
  :IN => 29,
  :ENDFOR => 30,
  :BLOCK => 31,
  :ENDBLOCK => 32,
  :EXTENDS => 33,
  :TEXT_BLOCK => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ENDIF",
  "ELSE",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "boolean_expression",
  "multiplicative_expression",
  "additive_expression",
  "parameter_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_statement",
  "if_block",
  "@1",
  "for_block",
  "@2",
  "block_block",
  "@3",
  "extends_statement",
  "generic_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 5)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 9)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 10)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 11)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_9(val, _values, result)
     result = ArithmeticNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 19)
  def _reduce_10(val, _values, result)
     result = ArithmeticNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 24)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 25)
  def _reduce_13(val, _values, result)
     result = ArithmeticNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 30)
  def _reduce_15(val, _values, result)
     result = BooleanNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 31)
  def _reduce_16(val, _values, result)
     result = BooleanNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 32)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 33)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 39)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 40)
  def _reduce_22(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_23(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 45)
  def _reduce_24(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 49)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_26(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 54)
  def _reduce_27(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_28(val, _values, result)
     result = InjectNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 61)
  def _reduce_29(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 69)
  def _reduce_30(val, _values, result)
            result = IfNode.new(val[0], @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 72)
  def _reduce_31(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 75)
  def _reduce_32(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 82)
  def _reduce_33(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 86)
  def _reduce_34(val, _values, result)
            iterator = VariableNode.new(val[2].value)
        iterable = VariableNode.new(val[4].value)
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 95)
  def _reduce_35(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 98)
  def _reduce_36(val, _values, result)
     result = BlockNode.new(val[2].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 102)
  def _reduce_37(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 103)
  def _reduce_38(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 107)
  def _reduce_39(val, _values, result)
     result = GenericStatementNode.new(val[1].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 108)
  def _reduce_40(val, _values, result)
     result = GenericStatementNode.new(val[1].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 112)
  def _reduce_41(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'cadenza.y', 120)
  def _reduce_46(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 121)
  def _reduce_47(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 122)
  def _reduce_48(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 123)
  def _reduce_49(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 124)
  def _reduce_50(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 125)
  def _reduce_51(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
