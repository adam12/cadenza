#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

# racc_parser.rb : generated by racc

module Cadenza
  class RaccParser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 224)

...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    39,     3,     3,     4,    41,    39,    71,    72,    98,    22,
    23,    24,    25,    26,   116,   112,    39,    10,    10,    22,
    23,    24,    25,    26,    35,    31,    36,    83,    84,    35,
    37,    36,    39,    38,   119,    37,    40,    92,    38,   133,
    35,    40,    36,    39,    82,    88,    37,    81,    39,    38,
    71,    72,    40,    73,   128,     3,    35,   129,    36,    39,
    84,     3,    37,   129,     3,    38,   124,    35,    40,    36,
    39,    10,    35,    37,    36,   123,    38,    10,    37,    40,
    10,    38,    94,    35,    40,    36,    83,   122,    88,    37,
    71,    72,    38,   121,    35,    40,    36,   120,   115,   118,
    37,    71,    72,    38,   117,   137,    40,    22,    23,    24,
    25,    26,    22,    23,    24,    25,    26,    22,    23,    24,
    25,    26,   136,    31,    62,    63,    62,    63,    31,    60,
    61,    99,    80,    31,    22,    23,    24,    25,    26,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,     3,
    31,   124,     3,   139,   129,    31,     3,     3,     4,    45,
    31,     3,     3,     4,    41,    10,   140,     3,    10,     4,
    60,    61,    10,    10,     3,    98,    52,    10,    10,     3,
     3,    45,     4,    10,     3,     3,   124,     4,    62,    63,
    10,     3,     3,    52,    96,    10,    10,    62,    63,    49,
    10,    10,    22,    23,    24,    25,    26,    10,    10,    22,
    23,    24,    25,    26,    92,     3,    56,   134,    31,    22,
    23,    24,    25,    26,    78,    31,    22,    23,    24,    25,
    26,    10,    71,    72,    19,    31,    64,    65,    66,    67,
    68,    69,    31,    64,    65,    66,    67,    68,    69,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,    22,
    23,    24,    25,    26,    22,    23,    24,    25,    26,    62,
    63,    62,    63,    60,    61,    62,    63,   144,    77,    74,
   112,   147,    98 ]

racc_action_check = [
    41,     0,     5,     0,     5,   134,    76,    76,    79,    22,
    22,    22,    22,    22,    76,    73,   129,     0,     5,    60,
    60,    60,    60,    60,    41,    22,    41,    41,    41,   134,
    41,   134,   124,    41,    79,   134,    41,   134,   134,    92,
   129,   134,   129,     4,    40,   129,   129,    40,    52,   129,
    33,    33,   129,    33,    88,    91,   124,    91,   124,    45,
   124,    90,   124,    90,    87,   124,    87,     4,   124,     4,
    96,    91,    52,     4,    52,    84,     4,    90,    52,     4,
    87,    52,    52,    45,    52,    45,    45,    83,    45,    45,
    75,    75,    45,    82,    96,    45,    96,    81,    75,    78,
    96,   138,   138,    96,    77,    96,    96,    39,    39,    39,
    39,    39,    26,    26,    26,    26,    26,    98,    98,    98,
    98,    98,    94,    39,   105,   105,   104,   104,    26,   103,
   103,    59,    39,    98,   139,   139,   139,   139,   139,    35,
    35,    35,    35,    35,    36,    36,    36,    36,    36,    86,
   139,    86,   131,   112,   131,    35,     2,     6,     2,     6,
    36,     9,    43,     9,    43,    86,   114,    44,   131,    44,
   102,   102,     2,     6,     8,    58,     8,     9,    43,    47,
    48,    47,    48,    44,   126,    51,   126,    51,   108,   108,
     8,    54,    55,    54,    55,    47,    48,   106,   106,     7,
   126,    51,     3,     3,     3,     3,     3,    54,    55,    72,
    72,    72,    72,    72,    49,    93,    19,    93,     3,   117,
   117,   117,   117,   117,    38,    72,    71,    71,    71,    71,
    71,    93,    57,    57,     1,   117,    30,    30,    30,    30,
    30,    30,    71,    70,    70,    70,    70,    70,    70,    66,
    66,    66,    66,    66,    67,    67,    67,    67,    67,    68,
    68,    68,    68,    68,    69,    69,    69,    69,    69,    64,
    64,    64,    64,    64,    62,    62,    62,    62,    62,    31,
    31,    31,    31,    31,    65,    65,    65,    65,    65,    63,
    63,    63,    63,    63,    61,    61,    61,    61,    61,   109,
   109,    29,    29,    28,    28,   107,   107,   137,    37,    34,
   140,   141,   145 ]

racc_action_pointer = [
   -23,   234,   132,   199,    40,   -22,   133,   173,   150,   137,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   216,
   nil,   nil,     6,   nil,   nil,   nil,   109,   nil,   294,   290,
   223,   276,   nil,    30,   284,   136,   141,   305,   221,   104,
    41,    -3,   nil,   138,   143,    56,   nil,   155,   156,   179,
   nil,   161,    45,   nil,   167,   168,   nil,   212,   173,   123,
    16,   291,   271,   286,   266,   281,   246,   251,   256,   261,
   230,   223,   206,    12,   nil,    70,   -14,    70,    71,     6,
   nil,    69,    65,    59,    47,   nil,   125,    40,    26,   nil,
    37,    31,    11,   191,    94,   nil,    67,   nil,   114,   nil,
   nil,   nil,   161,   120,   115,   113,   186,   294,   177,   288,
   nil,   nil,   131,   nil,   143,   nil,   nil,   216,   nil,   nil,
   nil,   nil,   nil,   nil,    29,   nil,   160,   nil,   nil,    13,
   nil,   128,   nil,   nil,     2,   nil,   nil,   279,    81,   131,
   307,   283,   nil,   nil,   nil,   310,   nil,   nil ]

racc_action_default = [
    -2,   -77,    -1,   -77,   -77,   -77,   -77,   -54,   -77,   -77,
   -66,   -67,   -68,   -69,   -70,   -71,   -72,   -73,   -75,   -77,
   -74,   -76,    -5,    -7,    -8,    -9,   -77,   -11,   -14,   -17,
   -24,   -77,   -26,   -33,   -77,   -77,   -77,   -77,   -77,   -77,
   -77,   -77,   -41,   -77,   -77,   -77,   -46,   -77,   -77,   -77,
   -53,   -77,   -77,   -58,   -77,   -77,   148,    -3,    -6,   -77,
   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,
   -25,   -77,   -77,   -77,   -35,   -77,   -77,   -77,   -77,   -77,
   -60,   -77,   -77,   -77,   -77,   -42,   -77,   -77,   -77,   -47,
   -77,   -77,   -77,   -77,   -77,   -59,   -77,   -63,   -77,   -10,
   -12,   -13,   -15,   -16,   -18,   -19,   -20,   -21,   -22,   -23,
   -27,   -28,   -29,   -31,   -34,   -36,   -37,   -77,   -56,   -61,
   -64,   -65,   -38,   -39,   -77,   -44,   -77,   -43,   -40,   -77,
   -49,   -77,   -48,   -52,   -77,   -55,   -57,   -77,    -4,   -77,
   -77,   -77,   -45,   -50,   -62,   -30,   -32,   -51 ]

racc_goto_table = [
    20,    42,    57,    21,    58,   113,    34,    50,    44,    48,
    51,    53,    70,    46,    97,    75,    76,     2,   114,    57,
     1,    79,    43,    47,   nil,    54,    55,   100,   101,    59,
   104,   105,   106,   107,   108,   109,   110,   111,   nil,    85,
   nil,    20,   102,   103,    21,    20,    86,   nil,    21,   nil,
    90,   nil,    20,    20,    89,    21,    21,    95,   nil,   nil,
   nil,    87,   nil,   nil,   nil,    91,   nil,   nil,    93,   nil,
   nil,   nil,   146,   nil,   nil,   nil,   nil,   nil,   138,   nil,
   nil,   nil,   125,   127,   nil,    20,   nil,   nil,    21,    20,
   nil,    20,    21,   135,    21,   nil,   nil,   130,   132,   nil,
   nil,   nil,   nil,   126,   nil,   nil,   nil,   131,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,
   141,   145,   142,   nil,    20,   nil,   nil,    21,   nil,    20,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   143 ]

racc_goto_check = [
    32,    17,     4,    31,     3,    11,     6,    22,    16,    16,
    24,    26,     9,    18,    29,     4,     4,     2,    12,     4,
     1,     3,     2,     2,   nil,     2,     2,     5,     5,     6,
     8,     8,     8,     8,     8,     8,    10,    10,   nil,    17,
   nil,    32,     7,     7,    31,    32,    16,   nil,    31,   nil,
    16,   nil,    32,    32,    18,    31,    31,    26,   nil,   nil,
   nil,     2,   nil,   nil,   nil,     2,   nil,   nil,     2,   nil,
   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,    17,    17,   nil,    32,   nil,   nil,    31,    32,
   nil,    32,    31,    22,    31,   nil,   nil,    18,    18,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
     6,     3,    17,   nil,    32,   nil,   nil,    31,   nil,    32,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,    18 ]

racc_goto_pointer = [
   nil,    20,    17,   -18,   -20,   -33,     3,   -20,   -34,   -19,
   -35,   -68,   -55,   nil,   nil,   nil,     3,    -4,     7,   nil,
   nil,   nil,     0,   nil,     3,   nil,     3,   nil,   nil,   -41,
   nil,     1,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    33,    27,   nil,    28,    29,    30,
    32,   nil,   nil,    11,     5,     6,   nil,   nil,   nil,    12,
    13,     7,   nil,    14,   nil,     8,   nil,    16,     9,   nil,
    15,    18,    17 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 42, :_reduce_none,
  0, 42, :_reduce_2,
  1, 44, :_reduce_3,
  3, 44, :_reduce_4,
  1, 46, :_reduce_5,
  2, 46, :_reduce_6,
  1, 46, :_reduce_7,
  1, 46, :_reduce_8,
  1, 46, :_reduce_9,
  3, 46, :_reduce_10,
  1, 48, :_reduce_none,
  3, 48, :_reduce_12,
  3, 48, :_reduce_13,
  1, 49, :_reduce_none,
  3, 49, :_reduce_15,
  3, 49, :_reduce_16,
  1, 50, :_reduce_none,
  3, 50, :_reduce_18,
  3, 50, :_reduce_19,
  3, 50, :_reduce_20,
  3, 50, :_reduce_21,
  3, 50, :_reduce_22,
  3, 50, :_reduce_23,
  1, 51, :_reduce_none,
  2, 51, :_reduce_25,
  1, 45, :_reduce_none,
  3, 45, :_reduce_27,
  3, 45, :_reduce_28,
  1, 52, :_reduce_29,
  3, 52, :_reduce_30,
  1, 53, :_reduce_31,
  3, 53, :_reduce_32,
  1, 47, :_reduce_none,
  3, 47, :_reduce_34,
  3, 54, :_reduce_35,
  4, 55, :_reduce_36,
  4, 56, :_reduce_37,
  3, 57, :_reduce_38,
  3, 58, :_reduce_none,
  3, 59, :_reduce_none,
  2, 60, :_reduce_41,
  3, 60, :_reduce_42,
  4, 60, :_reduce_43,
  4, 60, :_reduce_44,
  5, 60, :_reduce_45,
  2, 61, :_reduce_46,
  3, 61, :_reduce_47,
  4, 61, :_reduce_48,
  4, 61, :_reduce_49,
  5, 61, :_reduce_50,
  6, 62, :_reduce_51,
  3, 63, :_reduce_none,
  2, 64, :_reduce_53,
  0, 65, :_reduce_54,
  4, 64, :_reduce_55,
  4, 66, :_reduce_56,
  3, 67, :_reduce_57,
  2, 68, :_reduce_58,
  3, 68, :_reduce_59,
  3, 69, :_reduce_60,
  4, 69, :_reduce_61,
  3, 70, :_reduce_62,
  3, 71, :_reduce_63,
  4, 72, :_reduce_64,
  4, 72, :_reduce_65,
  1, 73, :_reduce_66,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 43, :_reduce_73,
  2, 43, :_reduce_74,
  1, 43, :_reduce_75,
  2, 43, :_reduce_76 ]

racc_reduce_n = 77

racc_shift_n = 148

racc_token_table = {
  false => 0,
  :error => 1,
  "," => 2,
  :IDENTIFIER => 3,
  :INTEGER => 4,
  :REAL => 5,
  :STRING => 6,
  "(" => 7,
  ")" => 8,
  "*" => 9,
  "/" => 10,
  "+" => 11,
  "-" => 12,
  :OP_EQ => 13,
  :OP_NEQ => 14,
  :OP_LEQ => 15,
  :OP_GEQ => 16,
  ">" => 17,
  "<" => 18,
  :NOT => 19,
  :AND => 20,
  :OR => 21,
  ":" => 22,
  "|" => 23,
  :VAR_OPEN => 24,
  :VAR_CLOSE => 25,
  :STMT_OPEN => 26,
  :IF => 27,
  :STMT_CLOSE => 28,
  :UNLESS => 29,
  :ELSE => 30,
  :ENDIF => 31,
  :ENDUNLESS => 32,
  :FOR => 33,
  :IN => 34,
  :ENDFOR => 35,
  :BLOCK => 36,
  :ENDBLOCK => 37,
  :END => 38,
  :EXTENDS => 39,
  :TEXT_BLOCK => 40 }

racc_nt_base = 41

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\",\"",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "NOT",
  "AND",
  "OR",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "UNLESS",
  "ELSE",
  "ENDIF",
  "ENDUNLESS",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "END",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "parameter_list",
  "logical_expression",
  "primary_expression",
  "filtered_expression",
  "multiplicative_expression",
  "additive_expression",
  "boolean_expression",
  "inverse_expression",
  "filter",
  "filter_list",
  "inject_statement",
  "if_tag",
  "unless_tag",
  "else_tag",
  "end_if_tag",
  "end_unless_tag",
  "if_block",
  "unless_block",
  "for_tag",
  "end_for_tag",
  "for_block",
  "@1",
  "block_tag",
  "end_block_tag",
  "block_block",
  "generic_block_tag",
  "end_generic_block_tag",
  "generic_block",
  "extends_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 8)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_3(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_4(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_5(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 19)
  def _reduce_6(val, _values, result)
     result = VariableNode.new(val[0].value, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 20)
  def _reduce_7(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 21)
  def _reduce_8(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 22)
  def _reduce_9(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 23)
  def _reduce_10(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 28)
  def _reduce_12(val, _values, result)
     result = OperationNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 29)
  def _reduce_13(val, _values, result)
     result = OperationNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_15(val, _values, result)
     result = OperationNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_16(val, _values, result)
     result = OperationNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'cadenza.y', 40)
  def _reduce_18(val, _values, result)
     result = OperationNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 41)
  def _reduce_19(val, _values, result)
     result = OperationNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 42)
  def _reduce_20(val, _values, result)
     result = OperationNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 43)
  def _reduce_21(val, _values, result)
     result = OperationNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_22(val, _values, result)
     result = OperationNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 45)
  def _reduce_23(val, _values, result)
     result = OperationNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_25(val, _values, result)
     result = BooleanInverseNode.new(val[1]) 
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_27(val, _values, result)
     result = OperationNode.new(val[0], "and", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 56)
  def _reduce_28(val, _values, result)
     result = OperationNode.new(val[0], "or", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_29(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 61)
  def _reduce_30(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 65)
  def _reduce_31(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 66)
  def _reduce_32(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'cadenza.y', 71)
  def _reduce_34(val, _values, result)
     result = FilteredValueNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 75)
  def _reduce_35(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 79)
  def _reduce_36(val, _values, result)
     open_scope!; result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 83)
  def _reduce_37(val, _values, result)
     open_scope!; result = BooleanInverseNode.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 87)
  def _reduce_38(val, _values, result)
     open_scope! 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'cadenza.y', 99)
  def _reduce_41(val, _values, result)
     result = IfNode.new(val[0], close_scope!) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 100)
  def _reduce_42(val, _values, result)
     result = IfNode.new(val[0], close_scope!) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 103)
  def _reduce_43(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 109)
  def _reduce_44(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 115)
  def _reduce_45(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 122)
  def _reduce_46(val, _values, result)
     result = IfNode.new(val[0], close_scope!) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 123)
  def _reduce_47(val, _values, result)
     result = IfNode.new(val[0], close_scope!) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 126)
  def _reduce_48(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 132)
  def _reduce_49(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 138)
  def _reduce_50(val, _values, result)
            false_children = close_scope!
        true_children  = close_scope!
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 145)
  def _reduce_51(val, _values, result)
     result = [val[2].value, val[4]] 
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'cadenza.y', 156)
  def _reduce_53(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = val[0][1]
        
        result = ForNode.new(iterator, iterable, [])      
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 161)
  def _reduce_54(val, _values, result)
     open_scope! 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 163)
  def _reduce_55(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = val[0][1]
        
        result = ForNode.new(iterator, iterable, close_scope!)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 171)
  def _reduce_56(val, _values, result)
     result = open_block_scope!(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 175)
  def _reduce_57(val, _values, result)
     result = close_block_scope! 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 180)
  def _reduce_58(val, _values, result)
     result = BlockNode.new(val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 181)
  def _reduce_59(val, _values, result)
     result = BlockNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 185)
  def _reduce_60(val, _values, result)
     open_scope!; result = [val[1].value, []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 186)
  def _reduce_61(val, _values, result)
     open_scope!; result = [val[1].value, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 190)
  def _reduce_62(val, _values, result)
     result = close_scope! 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 194)
  def _reduce_63(val, _values, result)
     result = GenericBlockNode.new(val[0].first, val[2], val[0].last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 198)
  def _reduce_64(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 199)
  def _reduce_65(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 203)
  def _reduce_66(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'cadenza.y', 213)
  def _reduce_73(val, _values, result)
     push val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 214)
  def _reduce_74(val, _values, result)
     push val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 215)
  def _reduce_75(val, _values, result)
     document.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 216)
  def _reduce_76(val, _values, result)
     document.extends = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RaccParser
  end   # module Cadenza
